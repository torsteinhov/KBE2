#! NX/KF 4.0
DefClass: tor_thoresen_finishedProduct (ug_base_part);

    (number parameter) leg_length: 75;
    (number parameter) leg_side: 15;
    (number parameter) seat_side: 60;
    (number parameter) seat_thickness: leg_length:/10;
    (number parameter) leg_stick_diam: leg_side:/2; 
    (number parameter) height_back: 72;
    (number parameter) length_backplate: seat_side:;
    (number parameter) back_thickness: leg_length:/10;
    (number parameter) back_horizontal_thickness: 2;
    (number parameter) length_backsticks: height_back:/7;
	(number parameter) circle_dia: seat_side:/2;
    (Canonical Name Parameter Modifiable) color_chair: circle;
	
#dette er en kommentar
#we are testing Git commands

(child) seat: 
    {
    class, ug_block;
    length, seat_side:;
    width, seat_side:;
    height, seat_thickness:;
	Origin, Point(0,0,0);
	Direction, Vector(0,0,1);
    };

(child) seat_cutout: 
    {
    class, ug_cylinder;
	diameter, circle_dia:;
	height, seat_thickness:/2;
	Origin, Point(seat_side:/2,seat_side:/2,seat_thickness:/2);
	Direction, Vector(0,0,1);
	Operation, Subtract;
    Target, {seat:};
    };

(child) seat_innerCircle: 
    {
    class, ug_cylinder;
	diameter, circle_dia:-circle_dia:/6;
	height, seat_thickness:/2;
	Origin, Point(seat_side:/2,seat_side:/2,seat_thickness:/2);
	Direction, Vector(0,0,1);
	Operation, Unite;
    Target, {seat:};
    };

(child) leg1: 
    {
    class, ug_block;
    length, leg_side:;
    width, leg_side:;
    height, leg_length:;
	Origin, Point(0,0,-leg_length:);
	Direction, Vector(0,0,1);
	Operation, Unite;
	Target, {seat:};
    };

(child) leg2: 
     {
    class, ug_block;
    length, leg_side:;
    width, leg_side:;
    height, leg_length:;
	Origin, Point(seat_side:-leg_side:,0,-leg_length:);
	Direction, Vector(0,0,1);
	Operation, Unite;
	Target, {seat:};
    };

(child) leg3: 
     {
    class, ug_block;
	length, leg_side:;
    width, leg_side:;
    height, leg_length:;
	Origin, Point(0,seat_side:-leg_side:,-leg_length:);
	Direction, Vector(0,0,1);
	Operation, Unite;
	Target, {seat:};
    };

(child) leg4: 
     {
    class, ug_block;
    length, leg_side:;
    width, leg_side:;
    height, leg_length:;
	Origin, Point(seat_side:-leg_side:,seat_side:-leg_side:,-leg_length:);
	Direction, Vector(0,0,1);
	Operation, Unite;
	Target, {seat:};
    };

(child) leg_support1:
     {
	class, ug_cylinder;
	diameter, leg_stick_diam:;
	height, seat_side:-leg_side:;
	Origin, Point(leg_side:/2,leg_side:/2,-leg_length:/2);
	Direction, Vector(0,1,0);
	Operation, Unite;
	Target, {leg1:, leg3:};

     };

(child) leg_support2:
     {
	class, ug_cylinder;
	diameter, leg_stick_diam:;
	height, seat_side:-leg_side:;
	Origin, Point(seat_side:-(leg_side:/2),leg_side:/2,-leg_length:/2);
	Direction, Vector(0,1,0);
	Operation, Unite;
	Target, {leg2:, leg4:};
     };

(child) leg_support3:
     {
	class, ug_cylinder;
	diameter, leg_stick_diam:;
	height, seat_side:-leg_side:;
	Origin, Point(leg_side:/2,leg_side:/2,-leg_length:/2);
	Direction, Vector(1,0,0);
	Operation, Unite;
	Target, {leg1:, leg2:};
     };

(child) back_stick1: 
    {
    class, ug_block;
    length, back_thickness:;
    width, back_thickness:;
    height, height_back:+5;
	Origin, Point(0,0,0);
	Direction, Vector(0,0,1);
	Operation, Unite;
	Target, {seat:}	
    };

(child) back_stick2: 
    {
    class, ug_block;
    length, back_thickness:;
    width, back_thickness:;
    height, height_back:+5;
	Origin, Point(seat_side:-back_thickness:,0,0);
	Direction, Vector(0,0,1);
	Operation, Unite;
	Target, {seat:}	

    };

(child) back_horizontal1:
    {
	class, ug_block;
	length, seat_side:-back_thickness:;
	width, back_horizontal_thickness:;
	height, back_thickness:;
	Origin, Point(back_thickness:/2-2,back_thickness:/2-1,height_back:-3);
	Direction, Vector(1,0,0);
	Operation, Unite;
	Target, {back_stick1:, back_stick2:};
    };

(child) back_horizontal2:
    {
	class, ug_block;
	length, seat_side:-back_thickness:;
	width, back_horizontal_thickness:;
	height, back_thickness:;
	Origin, Point(back_thickness:/2-2,back_thickness:/2-1,height_back:-50);
	Direction, Vector(1,0,0);
	Operation, Unite;
	Target, {back_stick1:, back_stick2:};
    };

#+
(list) list1: loop
{
  for $x in {-base1_dia:/4, base1_dia:/4};
  collect loop {
  	for $y in {-base1_dia:/4, base1_dia:/4};
  	for $pt is Point($x,$y,0);
  	do printValue($pt);
  	append {ug_createInstance(
  	{
   	 	class, ug_cylinder;
    		diameter, hole_dia:;
    		height, base1_height:;
    		Origin, $pt; 
    		Direction, Vector(0,0,1);
  	})};
  };
};
(list) DemandValue: {List1:};
#-

(child) back_supportTOP:
    {
	class, ug_cylinder;
	diameter, back_horizontal_thickness:;
	height, length_backsticks:;
	Origin, Point(seat_side:/2,back_thickness:/2,height_back:);
	Direction, Vector(0,0,-1);
	Operation, Unite;
	Target, {back_horizontal1:,back_horizontal2:}; 
    };

(child) back_supportBOTTOM:
    {
	class, ug_cylinder;
	diameter, back_horizontal_thickness:;
	height, length_backsticks:;
	Origin, Point(seat_side:/2,back_thickness:/2,height_back:-45);
	Direction, Vector(0,0,1);
	Operation, Unite;
	Target, {back_horizontal1:,back_horizontal2:}; 
    };

(child) back_supportLEFT:
    {
	class, ug_cylinder;
	diameter, back_horizontal_thickness:;
	height, length_backsticks:;
	Origin, Point(seat_side:-back_thickness:,back_thickness:/2,height_back:-22.5);
	Direction, Vector(-1,0,0);
	Operation, Unite;
	Target, {back_horizontal1:,back_horizontal2:};  
    };

(child) back_supportRIGHT:
    {
	class, ug_cylinder;
	diameter, back_horizontal_thickness:;
	height, length_backsticks:;
	Origin, Point(back_thickness:,back_thickness:/2,height_back:-22.5);
	Direction, Vector(1,0,0);
	Operation, Unite;
	Target, {back_horizontal1:,back_horizontal2:};  
    };

(child) back_supportCIRCLE:
    {
	class, ug_cylinder;
	diameter, circle_dia:;
	height, seat_thickness:/2;
	Origin, Point(seat_side:/2,seat_thickness:/4,height_back:-22.5);
	Direction, Vector(0,1,0);
    };

(child) back_supportCIRCLE_cutout:
    {
	class, ug_cylinder;
	diameter, circle_dia:-circle_dia:/6;
	height, seat_thickness:/2;
	Origin, Point(seat_side:/2,seat_thickness:/4,height_back:-22.5);
	Direction, Vector(0,1,0);
    Operation, Subtract;
    Target, {back_supportCIRCLE:};
    };

(child) colored:
    {
 	 Class, ug_body;
 	 Feature, {seat:};
 	 Layer, 1;
 	 color, ug_askClosestColor(color_chair:);
    };